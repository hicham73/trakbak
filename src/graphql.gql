# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Int!
  username: String
  password: String!
  prenom: String
  nom: String
  email: String
  type: Int!
  CreatedOn: DateTime
  ModifiedOn: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Chauffeur {
  id: Int!
  nom: String!
  prenom: String!
  cin: String!
  permis: String!
  isactive: Boolean!
  transporteur: [Transporteur!]!
  vehicules: [Vehicule!]!
}

type Image {
  id: Int!
  data: String
  vehicule: Vehicule
}

type Vehicule {
  id: Int
  fabricant: String
  modele: String
  type: String
  immatriculation: String
  ptac: Float
  datemisecirculation: DateTime
  carburant: String
  vitesse: String
  ville: String
  isactive: Boolean
  transporteur: Transporteur
  chauffeurs: [Chauffeur!]
  images: [Image!]
  image: Image
}

type Expediteur {
  id: Float!
  type: String!
  nom: String!
  prenom: String!
  cin: String!
  marchandise: String!
  adresse1: String!
  adresse2: String!
  ville: String!
  pays: String!
  isactive: Boolean!
  encheres: [Enchere!]!
}

type Enchere {
  id: Float!
  villedepart: String!
  villearrivee: String!
  marchandise: String!
  uniteprix: String!
  prixunitaire: Float!
  volume: String!
  commentaire: String!
  debutpublication: DateTime
  finpublication: DateTime
  statut: String!
  nombrepropositions: Float
  expediteur: Expediteur
  propositions: [Proposition!]
}

type Proposition {
  id: Float!
  prixunitaire: Float!
  commentaire: String!
  date: DateTime
  statut: String!
}

type Transporteur {
  id: Int
  type: Float
  nom: String
  prenom: String
  cin: String
  permis: String
  nbrvehicules: Float
  nbrvoyages: Float
  dateinscription: DateTime
  dateexpirationpermis: DateTime
  cote: Float
  vehicules: [Vehicule!]
  propositions: [Proposition!]
}

input UserInput {
  id: Int!
  username: String
  password: String!
  prenom: String
  nom: String
  email: String
  type: Int!
  CreatedOn: DateTime
  ModifiedOn: DateTime
}

input ChauffeurInput {
  id: Int!
  nom: String!
  prenom: String!
  cin: String!
  permis: String!
  isactive: Boolean!
  transporteur: [TransporteurInput!]!
  vehicules: [VehiculeInput!]!
}

input ImageInput {
  id: Int!
  data: String
  vehicule: VehiculeInput
}

input VehiculeInput {
  id: Int
  fabricant: String
  modele: String
  type: String
  immatriculation: String
  ptac: Float
  datemisecirculation: DateTime
  carburant: String
  vitesse: String
  ville: String
  isactive: Boolean
  transporteur: TransporteurInput
  chauffeurs: [ChauffeurInput!]
  images: [ImageInput!]
  image: ImageInput
}

input ExpediteurInput {
  id: Float!
  type: String!
  nom: String!
  prenom: String!
  cin: String!
  marchandise: String!
  adresse1: String!
  adresse2: String!
  ville: String!
  pays: String!
  isactive: Boolean!
}

input EnchereInput {
  id: Float!
  villedepart: String!
  villearrivee: String!
  marchandise: String!
  uniteprix: String!
  prixunitaire: Float!
  volume: String!
  commentaire: String!
  debutpublication: DateTime
  finpublication: DateTime
  statut: String!
  nombrepropositions: Float
  expediteur: ExpediteurInput
  propositions: [PropositionInput!]
}

input PropositionInput {
  id: Float!
  prixunitaire: Float!
  commentaire: String!
  date: DateTime
  statut: String!
}

input TransporteurInput {
  id: Int
  type: Float
  nom: String
  prenom: String
  cin: String
  permis: String
  nbrvehicules: Float
  nbrvoyages: Float
  dateinscription: DateTime
  dateexpirationpermis: DateTime
  cote: Float
  vehicules: [VehiculeInput!]
  propositions: [PropositionInput!]
}

type Query {
  getUser(id: Int!): User!
  getUsers: [User!]!
  fetchUserByName(prenom: String!): User!
  getVehicule(id: Int!): Vehicule!
  getVehicules(transporteurId: Int!): [Vehicule!]!
  fetchVehiculeByName(prenom: String!): Vehicule!
  getTransporteur(id: Int!): Transporteur!
  getTransporteurs: [Transporteur!]!
  getOneTransporteur(id: Int!): [Transporteur!]!
  getImage(id: Int!): Image!
  getImages(vehiculeId: Int!): [Image!]!
  getExpediteur(id: Int!): Expediteur!
  getExpediteursEncheres(id: Int!): Expediteur!
  getExpediteurs: [Expediteur!]!
  getPropositions: [Proposition!]!
  getPropositionsDUneEnchere(id: Int!): [Proposition!]!
  getEncheres: [Enchere!]!
  getEncheresDUnExpediteur(id: Int!): [Enchere!]!
  getEnchere(id: Int!): [Enchere!]!
}

type Mutation {
  deleteUser(id: Int!): User!
  updateUser(userInput: UserInput!): User!
  createUser(userInput: UserInput!): User!
  deleteVehicule(id: Int!): Vehicule!
  setImagePrincipale(imageId: Int!, vehiculeId: Int!): Boolean!
  updateVehicule(vehiculeInput: VehiculeInput!): Vehicule!
  createVehicule(vehiculeInput: VehiculeInput!): Vehicule!
  deleteTransporteur(id: Int!): Transporteur!
  updateTransporteur(transporteurInput: TransporteurInput!): Transporteur!
  createTransporteur(transporteurInput: TransporteurInput!): Transporteur!
  deleteImage(id: Int!): Image!
  updateImage(imageInput: ImageInput!): Image!
  createImage(imageInput: ImageInput!): Image!
  updateEnchere(enchereInput: EnchereInput!): Enchere!
  createEnchere(enchereInput: EnchereInput!): Enchere!
}
